// 汎用的なSASSユーティリティクラス
$base-unit: 0.25rem
$spacer: $base-unit
$breakpoints: (xs: 575.98px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)
$colors: (
  // 基本色
  'default': #212529,
  'muted': #6c757d,
  'white': #ffffff,
  'black': #000000,
  // グレースケール
  'gray1': #f8f9fa,
  'gray2': #e9ecef,
  'gray3': #dee2e6,
  'gray4': #ced4da,
  'gray5': #adb5bd,
  'gray6': #6c757d,
  'gray7': #495057,
  'gray8': #343a40,
  'gray9': #212529,
  // 状態色
  'success': #28a745,
  'danger': #dc3545,
  'warning': #ffc107,
  'info': #17a2b8,
  // アクセント色
  'primary': #007bff,
  'secondary': #6c757d,
  'accent': #fd7e14,
  'highlight': #9a6ee2,
  // 特殊色
  'subtle': rgba(0, 0, 0, 0.65),
  'disabled': #aaaaaa,
  'link': #0366d6,
  'link-visited': #551a8b,
  'transparent': transparent
)
// シャドウのマップ定義
$shadows: (
  'none': none,
  'sm': 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075),
  'default': 0 0.5rem 1rem rgba(0, 0, 0, 0.15),
  'lg': 0 1rem 3rem rgba(0, 0, 0, 0.175)
)

$transparencies: (
  '90': 0.9,
  '80': 0.8,
  '75': 0.75,
  '70': 0.7,
  '65': 0.65,
  '60': 0.6,
  '50': 0.5,
  '40': 0.4,
  '35': 0.35,
  '30': 0.3,
  '25': 0.25,
  '20': 0.2,
  '10': 0.1,
  '0': 0
)

// 背景色
@each $name, $color in $colors
  .bg#{$name}
    background-color: $color
  @each $trkey, $transparency in $transparencies
    .bg#{$name}#{$trkey}
      background-color: rgba($color, $transparency)


// テキスト色
@each $name, $color in $colors
  .#{$name}
    color: $color
  @each $trkey, $transparency in $transparencies
    .#{$name}#{$trkey}
      background-color: rgba($color, $transparency)

// シャドウ - ループを使用
@each $name, $value in $shadows
  @if $name == 'default'
    .shadow
      box-shadow: $value
  @else
    .shadow-#{$name}
      box-shadow: $value

// フレックスボックス関連
.fl
  display: flex
.fli
  display: inline-flex
.flw
  flex-wrap: wrap
.flnw
  flex-wrap: nowrap
.flwr
  flex-wrap: wrap-reverse

// フレックス方向
$directions: (r: row, c: column, rr: row-reverse, cr: column-reverse)
@each $suffix, $value in $directions
  .fd#{$suffix}
    flex-direction: $value

// 水平方向の配置（justify-content）
$justify-contents: (s: flex-start, e: flex-end, c: center, b: space-between, a: space-around, v: space-evenly)
@each $suffix, $value in $justify-contents
  .jc#{$suffix}
    justify-content: $value

// 垂直方向の配置（align-items）
$align-items: (s: flex-start, e: flex-end, c: center, b: baseline, str: stretch)
@each $suffix, $value in $align-items
  .ai#{$suffix}
    align-items: $value
  .as#{$suffix}
    align-self: $value
  .ac#{$suffix}
    align-content: $value

// フレックスアイテムの成長と収縮
@for $i from 0 through 1
  .fg#{$i}
    flex-grow: $i
  .fs#{$i}
    flex-shrink: $i
.fb0
  flex-basis: 0
.fba
  flex-basis: auto

// フレックスショートハンド
.f1
  flex: 1
.f0
  flex: 0
.fa
  flex: auto

// グリッド関連
.gr
  display: grid
.gri
  display: inline-grid

// グリッドギャップ - 基本単位を使用
@for $i from 0 through 5
  $value: if($i == 0, 0, $spacer * pow(2, $i - 1))
  .gg#{$i}
    gap: $value

// グリッド列・行
@for $i from 1 through 5
  .gtc#{$i}
    grid-template-columns: repeat($i, 1fr)
  .gtr#{$i}
    grid-template-rows: repeat($i, 1fr)

// 自動フロー
.gaf
  grid-auto-flow: row
.gafc
  grid-auto-flow: column
.gafd
  grid-auto-flow: dense

// 配置
.gplcc
  place-content: center
.gplic
  place-items: center

// 表示関連
.db
  display: block
.di
  display: inline
.dib
  display: inline-block
.dn
  display: none

// 位置関連
$positions: (r: relative, a: absolute, f: fixed, s: sticky)
@each $suffix, $value in $positions
  .po#{$suffix}
    position: $value
.po-c
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%, -50%)

// スペーシング関数 - 簡略化
@function spacing($level)
  @if $level == 0
    @return 0
  @else if $level == 1
    @return $spacer
  @else
    @return $spacer * (2 * ($level - 1))

// 方向マップを定義
$directions: ('': '', t: -top, b: -bottom, l: -left, r: -right, x: (-left, -right), y: (-top, -bottom))

// マージンとパディングを生成
@each $prop, $abbr in (margin: m, padding: p)
  @each $dir_key, $dir_val in $directions
    @for $i from 0 through 13
      $value: spacing($i)
      .#{$abbr}#{$dir_key}#{$i}
        @if $dir_val == ''
          #{$prop}: $value
        @else if type-of($dir_val) == 'list'
          @each $d in $dir_val
            #{$prop}#{$d}: $value
        @else
          #{$prop}#{$dir_val}: $value

// 自動マージン
.ma
  margin: auto
.mxa
  margin-left: auto
  margin-right: auto
.mya
  margin-top: auto
  margin-bottom: auto
$insets: (t: top, r: right, b: bottom, l: left)
@each $prop, $abbr in $insets
  @for $i from 0 through 9
    $value: spacing($i)
    .#{$abbr}#{$i}
      #{$prop}: $value

// 便利な位置指定クラス
.inset-0
  top: 0
  right: 0
  bottom: 0
  left: 0

// テキスト関連
$text-aligns: (c: center, l: left, r: right, j: justify)
@each $suffix, $value in $text-aligns
  .ta#{$suffix}
    text-align: $value
$text-decorations: (n: none, u: underline, lt: line-through)
@each $suffix, $value in $text-decorations
  .td#{$suffix}
    text-decoration: $value
$text-transforms: (u: uppercase, l: lowercase, c: capitalize)
@each $suffix, $value in $text-transforms
  .tt#{$suffix}
    text-transform: $value

// フォントウェイト
@for $i from 1 through 9
  .fw#{$i}
    font-weight: $i * 100

// フォントサイズ - 比率を使用
$font-size-base: 1rem
$font-sizes: (xs: $font-size-base * 0.75, sm: $font-size-base * 0.875, md: $font-size-base, lg: $font-size-base * 1.125, xl: $font-size-base * 1.25, 2xl: $font-size-base * 1.5, 3xl: $font-size-base * 1.875, 4xl: $font-size-base * 2.25, 5xl: $font-size-base * 3)
@each $name, $size in $font-sizes
  .fs-#{$name}
    font-size: $size

// ボーダー関連
.bd0
  border: none
.bd
  border: 1px solid
$sides: (t: top, r: right, b: bottom, l: left)
@each $suffix, $side in $sides
  .bd-#{$suffix}
    border-#{$side}: 1px solid
// ボーダー半径も四則演算を利用

@for $i from 0 through 4
  $value: if($i == 0, 0, $base-unit * pow(2, $i - 1))
  .br#{$i}
    border-radius: $value
.brf
  border-radius: 9999px

// 幅と高さ
$sizes: (a: auto, 100: 100%, 75: 75%, 50: 50%, 25: 25%)
@each $name, $size in $sizes
  .w#{$name}
    width: $size
  .h#{$name}
    height: $size
.hscr
  height: 100vh
.wscr
  width: 100vw

// オーバーフロー
$overflow-types: (h: hidden, s: scroll, a: auto, v: visible)
@each $suffix, $value in $overflow-types
  .of#{$suffix}
    overflow: $value

// カーソル
$cursors: (p: pointer, d: default, na: not-allowed)
@each $suffix, $value in $cursors
  .c#{$suffix}
    cursor: $value

// 垂直アライン
$vertical-aligns: (m: middle, t: top, b: bottom)
@each $suffix, $value in $vertical-aligns
  .va-#{$suffix}
    vertical-align: $value

// ホワイトスペース
$whitespaces: (nw: nowrap, p: pre, pw: pre-wrap)
@each $suffix, $value in $whitespaces
  .ws-#{$suffix}
    white-space: $value

// z-index（指数関数的なスケール）
@for $i from 0 through 4
  $value: if($i == 0, 0, pow(10, $i))
  .z#{$value}
    z-index: $value
  .zn#{$value}
    z-index: -$value

// レスポンシブメディアクエリミキシン
@mixin mq($breakpoint)
  @if $breakpoint == "xs"
    @media (max-width: map-get($breakpoints, xs))
      @content
  @else
    @media (min-width: map-get($breakpoints, $breakpoint))
      @content

// 表示・非表示のレスポンシブクラス
$display-values: (
  dn: none,
  db: block,
  di: inline,
  dib: inline-block,
  fl: flex,
  fli: inline-flex,
  gr: grid,
  gri: inline-grid
)
$device-sizes: (xs, sm, md, lg, xl, xxl)

// ブレークポイント指定のレスポンシブクラス（.md:dn 形式）
@each $size in $device-sizes
  @include mq($size)
    @each $class, $value in $display-values
      .#{$size}\:#{$class}
          display: $value

// アクションタイプ定義
$actions: (
  "hover": ":hover",
  "focus": ":focus",
  "active": ":active",
  "visited": ":visited",
  "disabled": ":disabled",
  "focus-within": ":focus-within",
  "focus-visible": ":focus-visible"
)
// 属性タイプ定義
$properties: (
  "": "color",
  "bg": "background-color",
  "bd": "border-color",
  "oc": "outline-color"
)
// 汎用的なアクションミックスイン
@mixin action-variant($action, $property-key, $property-value, $color-name, $color-value)
  $action-pseudo: map-get($actions, $action)
  $property: map-get($properties, $property-key)
  $prefix: if($property-key != "", "#{$property-key}", "")

  .#{$action}\:#{$prefix}#{$color-name}
    &#{$action-pseudo}
      #{$property}: $color-value !important

// すべてのアクションに対するプロパティと色の組み合わせを生成
@each $action, $action-pseudo in $actions
  @each $property-key, $property-value in $properties
    @each $color-name, $color-value in $colors
      $prefix: if($property-key != "", "#{$property-key}", "")
      @include action-variant($action, $property-key, $property-value, $color-name, $color-value)
      // 透明度バリエーション
      @if $color-value != transparent
        // 75% 不透明度
        @include action-variant($action, $property-key, $property-value, "#{$prefix}#{$color-name}75", rgba($color-value, 0.75))
        // 65% 不透明度
        @include action-variant($action, $property-key, $property-value, "#{$prefix}#{$color-name}65", rgba($color-value, 0.65))
        // 50% 不透明度
        @include action-variant($action, $property-key, $property-value, "#{$prefix}#{$color-name}50", rgba($color-value, 0.50))
        // 35% 不透明度
        @include action-variant($action, $property-key, $property-value, "#{$prefix}#{$color-name}35", rgba($color-value, 0.35))
        // 25% 不透明度
        @include action-variant($action, $property-key, $property-value, "#{$prefix}#{$color-name}25", rgba($color-value, 0.25))
// トランジション効果
.act-tr
  transition: all 0.35s ease-in-out
// 特殊アクション効果
.hover\:grow
  transition: transform 0.35s ease
  &:hover
    transform: scale(1.05)
.hover\:shadow
  transition: box-shadow 0.35s ease
  &:hover
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15)
.focus\:outline
  transition: outline 0.2s ease
  &:focus
    outline: 2px solid currentColor
    outline-offset: 2px
.active\:shrink
  transition: transform 0.1s ease
  &:active
    transform: scale(0.98)

// backdrop-filter 用の変数定義
$backdrop-blur-values: (0: 0, 1: 2px, 2: 4px, 3: 8px, 4: 12px, 5: 16px, 6: 24px, 7: 32px, 8: 48px, 9: 64px)
$backdrop-brightness-values: (0: 0, 1: 0.25, 2: 0.5, 3: 0.75, 4: 0.9, 5: 1, 6: 1.1, 7: 1.25, 8: 1.5, 9: 1.75, 10: 2)
$backdrop-contrast-values: (0: 0, 1: 0.25, 2: 0.5, 3: 0.75, 4: 0.9, 5: 1, 6: 1.1, 7: 1.25, 8: 1.5, 9: 1.75, 10: 2)
$backdrop-grayscale-values: (0: 0%, 1: 25%, 2: 50%, 3: 75%, 4: 100%)
$backdrop-saturate-values: (0: 0, 1: 0.25, 2: 0.5, 3: 0.75, 4: 0.9, 5: 1, 6: 1.25, 7: 1.5, 8: 1.75, 9: 2, 10: 3)
$backdrop-sepia-values: (0: 0%, 1: 25%, 2: 50%, 3: 75%, 4: 100%)
$backdrop-hue-rotate-values: (0: 0deg, 1: 45deg, 2: 90deg, 3: 135deg, 4: 180deg, 5: 225deg, 6: 270deg, 7: 315deg)
$backdrop-invert-values: (0: 0%, 1: 25%, 2: 50%, 3: 75%, 4: 100%)

// ブラウザ互換性のためのミックスイン
@mixin backdrop-filter($value)
  -webkit-backdrop-filter: $value
  backdrop-filter: $value

// 単一のフィルタータイプに対するクラス生成
@mixin generate-backdrop-filter-classes($filter-type, $filter-values, $unit: "")
  @each $level, $value in $filter-values
    .bd#{$filter-type}#{$level}
      @include backdrop-filter(#{$filter-type}(#{$value}#{$unit}))

// 単一フィルタークラスの生成
@include generate-backdrop-filter-classes("blur", $backdrop-blur-values)
@include generate-backdrop-filter-classes("brightness", $backdrop-brightness-values)
@include generate-backdrop-filter-classes("contrast", $backdrop-contrast-values)
@include generate-backdrop-filter-classes("grayscale", $backdrop-grayscale-values, "%")
@include generate-backdrop-filter-classes("saturate", $backdrop-saturate-values)
@include generate-backdrop-filter-classes("sepia", $backdrop-sepia-values, "%")
@include generate-backdrop-filter-classes("hue-rotate", $backdrop-hue-rotate-values)
@include generate-backdrop-filter-classes("invert", $backdrop-invert-values, "%")

// プリセット効果
.bd-glass
  @include backdrop-filter(blur(8px) saturate(1.5) brightness(1.05))
  background-color: rgba(255, 255, 255, 0.5)
.bd-frosted
  @include backdrop-filter(blur(12px) saturate(1.2) brightness(1.1))
  background-color: rgba(255, 255, 255, 0.25)
.bd-dim
  @include backdrop-filter(blur(4px) brightness(0.9))
  background-color: rgba(0, 0, 0, 0.4)
.bd-dark-glass
  @include backdrop-filter(blur(16px) brightness(0.8) contrast(1.2))
  background-color: rgba(0, 0, 0, 0.65)

// 複合フィルターのサポート
.backdrop-filter-none
  @include backdrop-filter(none)

// カスタムフィルターのためのデータ属性
[data-backdrop-filter]
  @each $filter-type, $filter-values in ("blur": $backdrop-blur-values, "brightness": $backdrop-brightness-values, "contrast": $backdrop-contrast-values, "grayscale": $backdrop-grayscale-values, "saturate": $backdrop-saturate-values, "sepia": $backdrop-sepia-values, "hue-rotate": $backdrop-hue-rotate-values, "invert": $backdrop-invert-values)
    &[data-#{$filter-type}]
      $value: attr(data-#{$filter-type})
      @include backdrop-filter(#{$filter-type}(#{$value}))

// ブラウザサポートのためのフォールバック
.backdrop-fallback
  position: relative

  &::before
    content: ""
    position: absolute
    top: 0
    left: 0
    right: 0
    bottom: 0
    z-index: -1
    background: inherit
    filter: inherit